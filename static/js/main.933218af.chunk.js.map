{"version":3,"sources":["components/Modal.js","components/Header.js","actions/index.js","actions/types.js","components/List/DueDateButton.js","components/List/ListItem.js","components/List/AddItem.js","components/List/List.js","components/AllLists.js","App.js","reducers/listsReducer.js","reducers/index.js","index.js"],"names":["Modal","_ref","visibility","closeModal","title","content","buttonLabel","buttonClass","buttonAction","dispatch","useDispatch","createPortal","react_default","a","createElement","className","concat","onClick","style","justifyContent","document","body","Header","lists","useSelector","state","_useState","useState","_useState2","Object","slicedToArray","modalVisibility","setModalVisibility","renderDeleteAllModal","components_Modal","type","Fragment","payload","uuid","disabled","length","DueDateButton","this","props","Component","ListItem","onDueDateSelect","listId","itemId","dueDate","setDueDate","datepicker","useRef","onUpdateListItem","e","bubbles","newItem","updateListItem","target","textContent","item","months","datified","Date","today","getMonth","getDate","getFullYear","renderDueDate","color","completed","key","id","data-id","defaultChecked","onChange","toggleCompleted","onToggleCompleted","textDecoration","contentEditable","suppressContentEditableWarning","spellCheck","onBlur","onKeyPress","blur","todoItem","tabIndex","react_datepicker_es","customInput","List_DueDateButton","withPortal","popperModifiers","offset","enabled","shouldCloseOnSelect","ref","minDate","clear","padding","current","setOpen","deleteItem","AddItem","setNewItem","onAddItem","preventDefault","newItemId","addItem","onSubmit","placeholder","value","aria-hidden","List","message","filteredList","progressPerc","updateTitle","newTitle","updateListTitle","_props$list","list","items","filter","width","backgroundColor","lib_default","options","handle","dragClass","ghostClass","chosenClass","animation","order","newListItemOrder","toConsumableArray","sort","b","indexOf","console","log","map","components_List_ListItem","List_AddItem","AllLists","renderEmptyTodoMessage","paddingTop","components_List_List","App","useEffect","savedState","JSON","parse","localStorage","getItem","loadSavedState","setItem","stringify","components_Header","components_AllLists","href","rel","listsReducer","arguments","undefined","action","_action$payload","_action$payload2","listItem","_action$payload3","push","_action$payload4","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","render","es","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.933218af.chunk.js","sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\n\nconst Modal = ({\n  visibility,\n  closeModal,\n  title,\n  content,\n  buttonLabel,\n  buttonClass,\n  buttonAction\n}) => {\n  const dispatch = useDispatch();\n\n  return createPortal(\n    <div className={`modal ${visibility ? 'is-active' : ''}`}>\n      <div className=\"modal-background\" onClick={closeModal} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{title}</p>\n        </header>\n        <section className=\"modal-card-body\">{content}</section>\n        <footer\n          className=\"modal-card-foot\"\n          style={{ justifyContent: 'flex-end' }}\n        >\n          <button\n            className={`button ${buttonClass}`}\n            onClick={() => {\n              dispatch(buttonAction());\n              closeModal();\n            }}\n          >\n            {buttonLabel}\n          </button>\n          <button className=\"button\" onClick={closeModal}>\n            Cancel\n          </button>\n        </footer>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Modal from './Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addList, deleteAllLists } from '../actions';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const renderDeleteAllModal = (\n    <Modal\n      visibility={modalVisibility}\n      closeModal={() => setModalVisibility(false)}\n      title=\"Delete All Lists\"\n      content=\"Are you sure you want to delete all lists? This action is irreversible.\"\n      buttonLabel=\"Delete All Lists\"\n      buttonClass=\"is-danger\"\n      buttonAction={() => dispatch(deleteAllLists())}\n    />\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              <div className=\"level-item\">\n                <h1 className=\"title\">Multi Todo</h1>\n              </div>\n            </div>\n            <div className=\"level-right\">\n              <div className=\"level-item\">\n                <button\n                  className=\"button is-success\"\n                  onClick={() => dispatch(addList())}\n                >\n                  <span className=\"icon\">\n                    <i className=\"fas fa-plus\" />\n                  </span>\n                  <span>Add New List</span>\n                </button>\n                &nbsp;&nbsp;\n                <button\n                  className=\"button is-danger\"\n                  onClick={() => setModalVisibility(true)}\n                  disabled={lists.length === 0 ? true : false}\n                >\n                  <span className=\"icon\">\n                    <i className=\"fas fa-trash\" />\n                  </span>\n                  <span>Delete All Lists</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {renderDeleteAllModal}\n    </>\n  );\n};\n\nexport default Header;\n","import {\n  UPDATE_LIST_ITEM_ORDER,\n  UPDATE_LIST_ORDER,\n  LOAD_SAVED_STATE,\n  TOGGLE_COMPLETED,\n  ADD_ITEM,\n  DELETE_ITEM,\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n  SHOW_ALL,\n  UPDATE_LIST_TITLE,\n  DELETE_LIST,\n  ADD_LIST,\n  UPDATE_LIST_ITEM,\n  DELETE_ALL_LISTS,\n  SET_DUE_DATE\n} from '../actions/types';\nimport uuid from 'uuid';\n\nexport const updateListItemOrder = (listId, newListItemOrder) => {\n  console.log(newListItemOrder);\n  return {\n    type: UPDATE_LIST_ITEM_ORDER,\n    payload: {\n      listId,\n      newListItemOrder\n    }\n  };\n};\n\nexport const updateListOrder = newListOrder => ({\n  type: UPDATE_LIST_ORDER,\n  payload: newListOrder\n});\n\nexport const loadSavedState = savedState => ({\n  type: LOAD_SAVED_STATE,\n  payload: savedState\n});\n\nexport const toggleCompleted = (listId, itemId) => ({\n  type: TOGGLE_COMPLETED,\n  payload: {\n    listId,\n    itemId\n  }\n});\n\nexport const addItem = (newItem, listId) => ({\n  type: ADD_ITEM,\n  payload: {\n    newItemId: uuid(),\n    newItem,\n    listId\n  }\n});\n\nexport const deleteItem = (listId, itemId) => ({\n  type: DELETE_ITEM,\n  payload: {\n    listId,\n    itemId\n  }\n});\n\nexport const showActive = listId => ({\n  type: SHOW_ACTIVE,\n  payload: listId\n});\n\nexport const showCompleted = listId => ({\n  type: SHOW_COMPLETED,\n  payload: listId\n});\n\nexport const showAll = listId => ({\n  type: SHOW_ALL,\n  payload: listId\n});\n\nexport const updateListTitle = (listId, newTitle) => ({\n  type: UPDATE_LIST_TITLE,\n  payload: {\n    listId,\n    newTitle\n  }\n});\n\nexport const deleteList = listId => ({\n  type: DELETE_LIST,\n  payload: listId\n});\n\nexport const addList = () => ({\n  type: ADD_LIST,\n  payload: uuid()\n});\n\nexport const updateListItem = (listId, itemId, newItem) => ({\n  type: UPDATE_LIST_ITEM,\n  payload: {\n    listId,\n    itemId,\n    newItem\n  }\n});\n\nexport const deleteAllLists = () => ({\n  type: DELETE_ALL_LISTS\n});\n\nexport const setDueDate = (listId, itemId, dueDate) => ({\n  type: SET_DUE_DATE,\n  payload: {\n    listId,\n    itemId,\n    dueDate\n  }\n});\n","export const UPDATE_LIST_ITEM_ORDER = 'UPDATE_LIST_ITEM_ORDER';\nexport const UPDATE_LIST_ORDER = 'UPDATE_LIST_ORDER';\nexport const LOAD_SAVED_STATE = 'LOAD_SAVED_STATE';\nexport const TOGGLE_COMPLETED = 'TOGGLE_COMPLETED';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const SHOW_ACTIVE = 'SHOW_ACTIVE';\nexport const SHOW_COMPLETED = 'SHOW_COMPLETED';\nexport const SHOW_ALL = 'SHOW_ALL';\nexport const UPDATE_LIST_TITLE = 'UPDATE_LIST_TITLE';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const ADD_LIST = 'ADD_LIST';\nexport const UPDATE_LIST_ITEM = 'UPDATE_LIST_ITEM';\nexport const DELETE_ALL_LISTS = 'DELETE_ALL_LISTS';\nexport const SET_DUE_DATE = 'SET_DUE_DATE';\n","import React, { Component } from 'react';\n\nclass DueDateButton extends Component {\n  render() {\n    return (\n      <li\n        className=\"duedate-btn\"\n        title=\"Set a Due Date\"\n        onClick={this.props.onClick}\n      >\n        <i className=\"fas fa-calendar\" /> &nbsp; Set due date\n      </li>\n    );\n  }\n}\n\nexport default DueDateButton;\n","import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  setDueDate,\n  toggleCompleted,\n  updateListItem,\n  deleteItem\n} from '../../actions';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport DueDateButton from './DueDateButton';\nimport './ListItem.scss';\n\nconst ListItem = props => {\n  const dispatch = useDispatch();\n\n  const onDueDateSelect = (listId, itemId, dueDate) => {\n    dispatch(setDueDate(listId, itemId, dueDate));\n  };\n\n  const onToggleCompleted = (listId, itemId) => {\n    dispatch(toggleCompleted(listId, itemId));\n  };\n\n  const datepicker = useRef();\n\n  const onUpdateListItem = (listId, itemId, e) => {\n    // Following line prevents running dispatch twice.\n    // ISSUE:\n    // [Enter] key blurs element which causes onBlur attribute to fire again.\n    if (e.bubbles) return;\n\n    dispatch(updateListItem(listId, itemId, e.target.textContent));\n  };\n\n  const { listId, item } = props;\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n  const datified = new Date(item.dueDate);\n  const today = new Date();\n  const dueDate = (() => {\n    if (item.dueDate) {\n      return `${\n        months[datified.getMonth()]\n      } ${datified.getDate()}, ${datified.getFullYear()}`;\n    }\n    return null;\n  })();\n\n  const renderDueDate = (() => {\n    if (\n      dueDate &&\n      datified.getFullYear() === today.getFullYear() &&\n      datified.getMonth() === today.getMonth() &&\n      datified.getDate() === today.getDate()\n    ) {\n      return (\n        <div className=\"duedate\">\n          <strong style={{ color: 'dodgerblue' }}>Due today! </strong>\n        </div>\n      );\n    } else if (\n      dueDate &&\n      datified.getFullYear() === today.getFullYear() &&\n      datified.getMonth() === today.getMonth() &&\n      datified.getDate() === today.getDate() + 1\n    ) {\n      return (\n        <div className=\"duedate\">\n          <strong style={{ color: 'dodgerblue' }}>Due tomorrow! </strong>\n        </div>\n      );\n    } else if (dueDate && datified >= today) {\n      return (\n        <div className=\"duedate\">\n          <strong>Due on: </strong> {dueDate}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"duedate\" style={{ color: 'tomato' }}>\n          <strong style={{ color: 'red' }}>Was due on: </strong> {dueDate}\n        </div>\n      );\n    }\n  })();\n\n  return (\n    <div\n      className={`ListItem panel-block ${item.completed ? 'is-active' : ''}`}\n      key={item.id}\n      data-id={item.id}\n    >\n      <span className=\"handle-list-item\">\n        <i className=\"fas fa-grip-vertical\" />\n      </span>\n      <input\n        type=\"checkbox\"\n        defaultChecked={item.completed}\n        onChange={() => onToggleCompleted(listId, item.id)}\n      />\n      <span\n        style={item.completed ? { textDecoration: 'line-through' } : null}\n        contentEditable={true}\n        className=\"editable-list-item\"\n        suppressContentEditableWarning={true}\n        spellCheck={false}\n        onBlur={e => onUpdateListItem(listId, item.id, e)}\n        onKeyPress={e => {\n          if (e.key === 'Enter') {\n            onUpdateListItem(listId, item.id, e);\n            e.target.blur();\n          }\n        }}\n      >\n        {item.todoItem}\n      </span>\n      <div className=\"action-btns\" tabIndex=\"0\">\n        <i className=\"fas fa-ellipsis-v\" />\n        <ul>\n          <DatePicker\n            customInput={<DueDateButton />}\n            onChange={dueDate => onDueDateSelect(listId, item.id, dueDate)}\n            withPortal\n            popperModifiers={{\n              offset: {\n                enabled: true,\n                offset: '20px, 0px'\n              }\n            }}\n            shouldCloseOnSelect={true}\n            ref={datepicker}\n            minDate={new Date()}\n          >\n            <div style={{ clear: 'both', padding: 5 }}>\n              <button\n                className=\"button is-info clear-btn\"\n                onClick={() => {\n                  onDueDateSelect(listId, item.id, null);\n                  datepicker.current.setOpen(false);\n                }}\n              >\n                Clear\n              </button>\n            </div>\n          </DatePicker>\n\n          <li\n            className=\"delete-btn\"\n            title=\"Delete Item\"\n            onClick={() => dispatch(deleteItem(listId, item.id))}\n          >\n            <i className=\"fas fa-trash\" /> &nbsp; Delete Item\n          </li>\n        </ul>\n      </div>\n\n      {item.dueDate ? renderDueDate : null}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from '../../actions';\n\nconst AddItem = props => {\n  const dispatch = useDispatch();\n  const [newItem, setNewItem] = useState('');\n\n  const onAddItem = (listId, e) => {\n    e.preventDefault();\n    dispatch(addItem(newItem, listId));\n    setNewItem('');\n  };\n\n  const { listId } = props;\n\n  return (\n    <div className=\"panel-block\">\n      <form\n        className=\"control has-icons-left\"\n        onSubmit={e => onAddItem(listId, e)}\n      >\n        <input\n          type=\"text\"\n          className=\"input is-small\"\n          placeholder=\"Add Item...\"\n          onChange={e => setNewItem(e.target.value)}\n          value={newItem}\n        />\n        <span className=\"icon is-small is-left\">\n          <i className=\"fas fa-plus\" aria-hidden=\"true\" />\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default AddItem;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Sortable from 'react-sortablejs';\n\nimport {\n  updateListItemOrder,\n  updateListTitle,\n  deleteList,\n  showActive,\n  showCompleted,\n  showAll\n} from '../../actions';\n\nimport ListItem from './ListItem';\nimport AddItem from './AddItem';\nimport Modal from '../Modal';\nimport './List.scss';\n\nconst List = props => {\n  const dispatch = useDispatch();\n\n  const [modalVisibility, setModalVisibility] = useState(false);\n\n  const updateTitle = (listId, e) => {\n    // Following line prevents running dispatch twice.\n    // ISSUE:\n    // [Enter] key blurs element which causes onBlur attribute to fire again.\n    if (e.bubbles) return;\n\n    dispatch(updateListTitle(listId, e.target.textContent));\n  };\n\n  const { id, title, items, visibility } = props.list;\n  let message, filteredList, totalCompleted, progressPerc;\n\n  if (items.length === 0) {\n    message = <p className=\"list-msg\">There are no items in your list.</p>;\n  }\n\n  filteredList = items.filter(item => {\n    if (visibility === 'active') {\n      return !item.completed;\n    } else if (visibility === 'completed') {\n      return item.completed;\n    }\n    return item;\n  });\n\n  if (filteredList.length === 0 && items.length !== 0) {\n    message = (\n      <p className=\"list-msg\">\n        There are no {visibility} items in your list.\n        <br />\n        {visibility === 'active'\n          ? `Woohoo, you’ve completed all your tasks! 🥳`\n          : null}\n      </p>\n    );\n  }\n\n  totalCompleted = items.filter(item => item.completed).length;\n  progressPerc = (totalCompleted / items.length) * 100;\n\n  return (\n    <div className=\"column is-one-third List\" data-id={id}>\n      <div className=\"panel\">\n        <p className=\"panel-heading\">\n          <span className=\"handle-list\">\n            <i className=\"fas fa-grip-vertical\" />\n          </span>\n          <span\n            className=\"list-title\"\n            contentEditable={true}\n            onBlur={e => updateTitle(id, e)}\n            onKeyPress={e => {\n              if (e.key === 'Enter') {\n                updateTitle(id, e);\n                e.target.blur();\n              }\n            }}\n            suppressContentEditableWarning={true}\n            spellCheck={false}\n          >\n            {title}\n          </span>\n          <span className=\"action-btns\">\n            <button\n              className=\"delete-list-btn\"\n              onClick={() => setModalVisibility(true)}\n              title=\"Delete List\"\n            >\n              <span className=\"icon\">\n                <i className=\"fas fa-times\" />\n              </span>\n              {/* <span>Delete</span> */}\n            </button>\n          </span>\n        </p>\n        <div className=\"progressbar-wrapper\">\n          <div\n            className=\"progressbar\"\n            style={{\n              width: `${progressPerc}%`,\n              backgroundColor: `${\n                progressPerc === 100 ? 'dodgerblue' : 'lightblue'\n              }`\n            }}\n          />\n        </div>\n        <p className=\"panel-tabs\">\n          <button\n            onClick={() => dispatch(showActive(id))}\n            className={visibility === 'active' ? 'is-active' : null}\n          >\n            Active\n          </button>\n          <button\n            onClick={() => dispatch(showCompleted(id))}\n            className={visibility === 'completed' ? 'is-active' : null}\n          >\n            Completed\n          </button>\n          <button\n            onClick={() => dispatch(showAll(id))}\n            className={visibility === 'all' ? 'is-active' : null}\n          >\n            All\n          </button>\n        </p>\n        <Sortable\n          options={{\n            handle: '.handle-list-item',\n            dragClass: 'list-item-drag',\n            ghostClass: 'list-item-ghost',\n            chosenClass: 'list-item-chosen',\n            animation: 150\n          }}\n          onChange={order => {\n            dispatch(\n              updateListItemOrder(\n                id,\n                [...items].sort(\n                  (a, b) => order.indexOf(a.id) - order.indexOf(b.id)\n                )\n              )\n            );\n          }}\n        >\n          {filteredList.map(item => (\n            <ListItem item={item} listId={id} key={item.id} />\n          ))}\n        </Sortable>\n\n        {message}\n\n        <AddItem listId={id} />\n      </div>\n\n      <Modal\n        visibility={modalVisibility}\n        closeModal={() => setModalVisibility(false)}\n        title=\"Delete List\"\n        content=\"Are you sure you want to delete this list? This action is irreversible.\"\n        buttonLabel=\"Delete List\"\n        buttonClass=\"is-danger\"\n        buttonAction={() => dispatch(deleteList(id))}\n      />\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport List from './List/List';\nimport { updateListOrder } from '../actions';\n\nimport Sortable from 'react-sortablejs';\n\nconst AllLists = () => {\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n\n  const renderEmptyTodoMessage = (\n    <div className=\"section\">\n      <div className=\"container has-text-centered\">\n        You currently have no lists. Today is a great day to start a new todo\n        list!\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <section className=\"section\" style={{ paddingTop: '.5rem' }}>\n        <div className=\"container\">\n          <Sortable\n            options={{\n              handle: '.handle-list',\n              dragClass: 'list-drag',\n              ghostClass: 'list-ghost',\n              chosenClass: 'list-chosen',\n              animation: 150\n            }}\n            className=\"columns is-multiline\"\n            onChange={order => {\n              dispatch(\n                updateListOrder(\n                  [...lists].sort(\n                    (a, b) => order.indexOf(a.id) - order.indexOf(b.id)\n                  )\n                )\n              );\n            }}\n          >\n            {lists.map(list => {\n              return (\n                <List key={list.id} list={list} visibility={list.visibility} />\n              );\n            })}\n          </Sortable>\n        </div>\n      </section>\n      {lists.length === 0 ? renderEmptyTodoMessage : null}\n    </>\n  );\n};\n\nexport default AllLists;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadSavedState } from './actions';\n\nimport Header from './components/Header';\nimport AllLists from './components/AllLists';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const lists = useSelector(state => state.lists);\n\n  useEffect(() => {\n    const savedState = JSON.parse(localStorage.getItem('storedState'));\n    if (savedState) {\n      dispatch(loadSavedState(savedState));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem('storedState', JSON.stringify(lists));\n  });\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <AllLists />\n      <div className=\"shameless-plug\">\n        Made with <i className=\"fas fa-heart\" /> by&nbsp;\n        <a\n          href=\"http://tenzinggaychey.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gaychey\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  UPDATE_LIST_ITEM_ORDER,\n  UPDATE_LIST_ORDER,\n  LOAD_SAVED_STATE,\n  TOGGLE_COMPLETED,\n  ADD_ITEM,\n  DELETE_ITEM,\n  SHOW_ACTIVE,\n  SHOW_COMPLETED,\n  SHOW_ALL,\n  UPDATE_LIST_TITLE,\n  DELETE_LIST,\n  ADD_LIST,\n  UPDATE_LIST_ITEM,\n  DELETE_ALL_LISTS,\n  SET_DUE_DATE\n} from '../actions/types';\n\nconst listsReducer = (state = [], action) => {\n  switch (action.type) {\n    case UPDATE_LIST_ITEM_ORDER: {\n      const { listId, newListItemOrder } = action.payload;\n      return [...state].map(list => {\n        if (list.id === listId) {\n          list.items = newListItemOrder;\n        }\n        return list;\n      });\n    }\n\n    case UPDATE_LIST_ORDER: {\n      return action.payload;\n    }\n\n    case LOAD_SAVED_STATE:\n      return action.payload;\n\n    case TOGGLE_COMPLETED: {\n      const { listId, itemId } = action.payload;\n      return [...state].map(list => {\n        if (list.id === listId) {\n          list.items.map(listItem => {\n            if (listItem.id === itemId) {\n              listItem.completed = !listItem.completed;\n            }\n            return listItem;\n          });\n        }\n        return list;\n      });\n    }\n\n    case ADD_ITEM: {\n      const { newItemId, newItem, listId } = action.payload;\n      return [...state].map(list => {\n        if (list.id === listId) {\n          list.items.push({\n            id: newItemId,\n            todoItem: newItem,\n            completed: false\n          });\n        }\n        return list;\n      });\n    }\n\n    case DELETE_ITEM:\n      return [...state].map(list => {\n        if (list.id === action.payload.listId) {\n          list.items = list.items.filter(\n            item => item.id !== action.payload.itemId\n          );\n        }\n        return list;\n      });\n\n    case SHOW_ACTIVE:\n      return [...state].map(list => {\n        if (action.payload === list.id) {\n          list.visibility = 'active';\n        }\n        return list;\n      });\n\n    case SHOW_COMPLETED:\n      return [...state].map(list => {\n        if (action.payload === list.id) {\n          list.visibility = 'completed';\n        }\n        return list;\n      });\n\n    case SHOW_ALL:\n      return [...state].map(list => {\n        if (action.payload === list.id) {\n          list.visibility = 'all';\n        }\n        return list;\n      });\n\n    case UPDATE_LIST_TITLE:\n      return [...state].map(list => {\n        if (action.payload.listId === list.id) {\n          list.title = action.payload.newTitle;\n        }\n        return list;\n      });\n\n    case DELETE_LIST:\n      return [...state].filter(list => list.id !== action.payload);\n\n    case ADD_LIST:\n      return [\n        {\n          id: action.payload,\n          title: 'Click me to edit title',\n          visibility: 'all',\n          items: []\n        },\n        ...state\n      ];\n\n    case UPDATE_LIST_ITEM:\n      return [...state].map(list => {\n        if (list.id === action.payload.listId) {\n          list.items = list.items.map(item => {\n            if (item.id === action.payload.itemId) {\n              item.todoItem = action.payload.newItem;\n            }\n            return item;\n          });\n        }\n        return list;\n      });\n\n    case DELETE_ALL_LISTS:\n      return [];\n\n    case SET_DUE_DATE: {\n      const { listId, itemId, dueDate } = action.payload;\n      return [...state].map(list => {\n        if (list.id === listId) {\n          list.items.map(item => {\n            if (item.id === itemId) {\n              item.dueDate = dueDate;\n            }\n            return item;\n          });\n        }\n        return list;\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { combineReducers } from 'redux';\nimport listsReducer from './listsReducer';\n\nconst rootReducer = combineReducers({\n  lists: listsReducer\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}